<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.crm.repository.mapper.UserMapper">



	<select id="getUserInfoByLoginEmail" parameterType="String" resultType="UserSearchDto">
		/* userMapper.getUserInfoByLoginEmail */
		SELECT
			 C.USER_ID
			,C.ORG_CODE
			,C.ORG_NAME
			,C.LOGIN_EMAIL
			,C.USER_NAME
			,C.CHIEF_STAFF_NO
			,C.JOB_GRADE
			,C.POSITION
			,(SELECT USER_ID FROM T_USER WHERE EMP_NO = C.CHIEF_STAFF_NO) AS TEAM_LEADER_ID
			,(SELECT USER_NAME FROM T_USER WHERE EMP_NO = C.CHIEF_STAFF_NO) AS CHIEF_STAFF_NM
		FROM
		(
			SELECT
				 A.USER_ID
				,A.ORG_CODE
				,B.ORG_NAME
				,A.LOGIN_EMAIL
				,A.USER_NAME
				,B.CHIEF_STAFF_NO
				,A.JOB_GRADE
				,A.POSITION
			FROM
				T_USER A INNER JOIN T_ORG B
			ON A.ORG_CODE = B.ORG_CODE
			WHERE 1=1
				AND A.DELETE_YN 	= 'N'
				AND A.LOGIN_EMAIL 	= #{email}
		) AS C
	</select>

	<select id="getLegalOrgUserList" parameterType="String" resultType="TUser">
		/* userMapper.getLegalOrgUserList */
		SELECT
			<include refid="userColumns" />
		FROM
			T_USER A
		WHERE 1=1
			AND A.ORG_CODE = #{legalOrgCode}
	</select>

	<select id="getUserInfo" parameterType="String" resultType="TUser">
		/* userMapper.getUserInfo */
		SELECT
			<include refid="userColumns" />
		FROM
			T_USER A
		WHERE 1=1
			AND A.USER_ID = #{userId}
	</select>

	<insert id="insertUser" parameterType="TUser">
		/* userMapper.insertUser */
		INSERT INTO
			T_USER
		(
			 USER_ID
			,SITE_ID
			,EMP_ID
			,EMP_NO
			,USER_NAME
			,LOGIN_EMAIL
			,ORG_ID
			,ORG_CODE
			,CORP_ID
			,EMP_YMD
			,LOCK_YN
			,MOBILE
			,JOB_GRADE
			,POSITION
			,CREATE_DT
			,CREATE_ID
			,UPDATE_DT
			,UPDATE_ID
			,DELETE_YN
		)
		SELECT
			 #{userId}
			,#{siteId}
			,#{empId}
			,#{empNo}
			,#{userName}
			,#{loginEmail}
			,ORG_ID
			,#{orgCode}
			,#{corpId}
			,#{empYmd}
			,#{lockYn}
			,#{mobile}
			,#{jobGrade}
			,#{position}
			,#{createDt}
			,#{createId}
			,#{updateDt}
			,#{updateId}
			,#{deleteYn}
		FROM
			T_ORG
		WHERE 1=1
			AND ORG_CODE = #{orgCode}
	</insert>

	<update id="updateUser" parameterType="TUser">
		/* userMapper.updateUser */
		UPDATE
			T_USER
		SET
			 SITE_ID 		= #{siteId}
			,EMP_ID 		= #{empId}
			,USER_NAME 		= #{userName}
			,LOGIN_EMAIL 	= #{loginEmail}
			,ORG_ID 		= #{orgId}
			,ORG_CODE 		= #{orgCode}
			,CORP_ID 		= #{corpId}
			,EMP_YMD 		= #{empYmd}
			,LOCK_YN 		= #{lockYn}
			,MOBILE 		= #{mobile}
			,JOB_GRADE 		= #{jobGrade}
			,POSITION 		= #{position}
			,UPDATE_DT 		= #{updateDt}
			,UPDATE_ID 		= #{updateId}
		WHERE 1=1
			AND EMP_NO 		= #{empNo}
			AND DELETE_YN 	= 'N'
	</update>

	<select id="selectDeletedUserList" parameterType="java.util.HashMap" resultType="TUser">
		/* userMapper.selectDeletedUserList */
		SELECT
			 USER_ID
			,SITE_ID
			,EMP_ID
			,EMP_NO
			,USER_NAME
			,LOGIN_EMAIL
			,ORG_ID
			,ORG_CODE
			,CORP_ID
			,EMP_YMD
			,LOCK_YN
			,MOBILE
			,JOB_GRADE
			,POSITION
			,CREATE_DT
			,CREATE_ID
			,UPDATE_DT
			,UPDATE_ID
			,DELETE_YN
		FROM
			T_USER
		WHERE 1=1
			AND EMP_NO NOT IN
			<foreach collection="allEmpNoList" item="item" index="index" separator="," open="(" close=")">
				 #{item}
			</foreach>
	</select>

	<update id="deleteUser" parameterType="TUser">
		/* userMapper.deleteUser */
		UPDATE
			T_USER
		SET
			 DELETE_YN = 'Y'
			,UPDATE_DT = NOW()
			,UPDATE_ID = 'admin'
		WHERE 1=1
			AND DELETE_YN 	= 'N'
			AND EMP_NO 		= #{empNo}
			AND EMP_NO NOT IN ('9999999', '9999998', '9999997')
	</update>

	<select id="getUserInfoByUserEmpNo" parameterType="String" resultType="UserSearchDto">
		/* userMapper.getUserInfoByUserEmpNo */
			select * from T_USER_INFO
		/*
		SELECT
			 C.USER_ID
			,C.ORG_CODE
			,C.ORG_NAME
			,C.LOGIN_EMAIL
			,C.USER_NAME
			,C.CHIEF_STAFF_NO
			,C.JOB_GRADE
			,C.POSITION
			,(SELECT USER_ID FROM T_USER WHERE emp_no = C.CHIEF_STAFF_NO) AS TEAM_LEADER_ID
			,(SELECT USER_NAME FROM T_USER WHERE EMP_NO = C.CHIEF_STAFF_NO) AS CHIEF_STAFF_NM
		FROM
		(
			SELECT
				 A.USER_ID
				,A.ORG_CODE
				,B.ORG_NAME
				,A.LOGIN_EMAIL
				,A.USER_NAME
				,B.CHIEF_STAFF_NO
				,A.JOB_GRADE
				,A.POSITION
			FROM
				T_USER A INNER JOIN T_ORG B
			ON A.ORG_CODE = B.ORG_CODE
			WHERE 1=1
				AND A.DELETE_YN = 'N'
				AND A.EMP_NO 	= #{userEmpNo}
		) AS C
		*/
	</select>

	<select id="getUserInfoByUserId" parameterType="String" resultType="UserSearchDto">
		/* userMapper.getUserInfoByUserId */
		SELECT
			 C.USER_ID
			,C.ORG_CODE
			,C.ORG_NAME
			,C.LOGIN_EMAIL
			,C.USER_NAME
			,C.CHIEF_STAFF_NO
			,C.JOB_GRADE
			,C.POSITION
			,(SELECT USER_ID FROM T_USER WHERE emp_no = C.CHIEF_STAFF_NO) AS TEAM_LEADER_ID
			,(SELECT USER_NAME FROM T_USER WHERE EMP_NO = C.CHIEF_STAFF_NO) AS CHIEF_STAFF_NM
		FROM
		(
			SELECT
				 A.USER_ID
				,A.ORG_CODE
				,B.ORG_NAME
				,A.LOGIN_EMAIL
				,A.USER_NAME
				,B.CHIEF_STAFF_NO
				,A.JOB_GRADE
				,A.POSITION
			FROM
				T_USER A INNER JOIN T_ORG B
			ON A.ORG_CODE = B.ORG_CODE
			WHERE 1=1
				AND A.DELETE_YN = 'N'
				AND A.USER_ID 	= #{userId}
		) AS C
	</select>

	<select id="getUpOrgLeaderInfo" parameterType="UpOrgLeaderDto" resultType="UpOrgLeaderDto">
		/* userMapper.getUpOrgLeaderInfo */
		SELECT
			 A.ORG_CODE
			,A.UP_ORG_CODE
			,A.CHIEF_STAFF_NO
			,A.CHIEF_STAFF_NM
			,B.USER_ID AS TEAM_LEADER_ID
		FROM
			T_ORG A LEFT JOIN T_USER B ON A.CHIEF_STAFF_NO = B.EMP_NO
		WHERE 1=1
			AND A.ORG_CODE = (
				SELECT
					UP_ORG_CODE
				FROM
					T_ORG
				WHERE 1=1
					AND ORG_CODE = #{orgCode}
			)
	</select>

	<select id="getOrgPersonList" parameterType="UserSearchDto" resultType="TigrisMap">
		/* userMapper.getOrgPersonList */
		SELECT
			 A.*
			,( SELECT ORG_NAME FROM T_ORG WHERE ORG_CODE = A.ORG_CODE ) AS ORG_NAME
		FROM
		(
			SELECT
				 USER_ID
				,USER_NAME
				,ORG_ID
				,ORG_CODE
				,JOB_GRADE
				,POSITION
			FROM
				T_USER
			WHERE 1=1
				AND DELETE_YN 	= 'N'
				<if test="searchType == 'ORGCODE'">
					AND ORG_CODE 	= #{orgCode}
				</if>
				<if test="searchType == 'SEARCH'">
					AND UPPER(USER_NAME) LIKE UPPER(#{keyword})
				</if>
			ORDER BY
				USER_NAME ASC
		) A
	</select>

</mapper>
