<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tiger.crm.repository.mapper.NoticeBoardMapper">
    <select id="getNoticeBoardList"  resultType="java.util.HashMap">
        SELECT
            B.BOARD_ID,
            B.CATEGORY_CD,
            B.TOP_YN,
            B.TITLE,
            B.CREATE_ID,
            U.USER_NAME,
            B.CREATE_DT
        FROM T_BOARD B
        LEFT JOIN T_USER_INFO U
            ON B.CREATE_ID = U.USER_ID
        LEFT JOIN T_BOARD_OPEN_COMPANY O
            ON B.BOARD_ID = O.BOARD_ID
        <where>
            CATEGORY_CD = 'NOTICE'
            AND DELETE_YN = 'N'
            <!-- 검색 유형 (searchType이 제목, 내용, 담당자, 등 선택된 경우) -->
            <if test="pagingRequest.searchType != null and pagingRequest.searchType != ''">
                <choose>
                    <when test="pagingRequest.searchType == 'TITLE'">
                        AND TITLE LIKE CONCAT('%', #{pagingRequest.searchKeyword}, '%') <!-- 제목으로 검색 -->
                    </when>
                    <when test="pagingRequest.searchType == 'TITLEANDCONTENTS'">
                        AND (TITLE LIKE CONCAT('%', #{pagingRequest.searchKeyword}, '%')
                        OR CONTENT LIKE CONCAT('%', #{pagingRequest.searchKeyword}, '%')) <!-- 제목+내용으로 검색 -->
                    </when>
                    <when test="pagingRequest.searchType == 'USERNAME'">
                        AND U.USER_NAME LIKE CONCAT('%', #{pagingRequest.searchKeyword}, '%')  <!-- 작성자로 검색 -->
                    </when>
                </choose>
            </if>
            <if test="userLoginDto.userClass == 'USER' ">
                AND (O.COMPANY_ID = #{userLoginDto.companyId} OR O.COMPANY_ID IS NULL)
            </if>
        </where>
        ORDER BY
            CASE WHEN B.TOP_YN = 'Y' THEN 1 ELSE 2 END ASC,
            B.CREATE_DT DESC
        <!-- 페이지 처리 (페이징 처리) -->
        <if test="pagingRequest.page != null">
            LIMIT  #{pagingRequest.offset}, #{pagingRequest.size} <!-- 10개씩 보여주는 예시 (limit offset, rows) -->
        </if>

    </select>

    <select id="getNoticeBoardListCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM T_BOARD B
        LEFT JOIN T_USER_INFO U
            ON B.CREATE_ID = U.USER_ID
        LEFT JOIN T_BOARD_OPEN_COMPANY O
            ON B.BOARD_ID = O.BOARD_ID
        <where>
            CATEGORY_CD = 'NOTICE'
            AND DELETE_YN = 'N'
            <!-- 검색 유형 (searchType이 제목, 내용, 담당자, 등 선택된 경우) -->
            <if test="pagingRequest.searchType != null and pagingRequest.searchType != ''">
                <choose>
                    <when test="pagingRequest.searchType == 'TITLE'">
                        AND TITLE LIKE CONCAT('%', #{pagingRequest.searchKeyword}, '%') <!-- 제목으로 검색 -->
                    </when>
                    <when test="pagingRequest.searchType == 'TITLEANDCONTENTS'">
                        AND (TITLE LIKE CONCAT('%', #{pagingRequest.searchKeyword}, '%')
                        OR CONTENT LIKE CONCAT('%', #{pagingRequest.searchKeyword}, '%')) <!-- 제목+내용으로 검색 -->
                    </when>
                    <when test="pagingRequest.searchType == 'USERNAME'">
                        AND U.USER_NAME LIKE CONCAT('%', #{pagingRequest.searchKeyword}, '%')  <!-- 작성자로 검색 -->
                    </when>
                </choose>
            </if>
            <if test="userLoginDto.userClass == 'USER' ">
                AND (O.COMPANY_ID = #{userLoginDto.companyId} OR O.COMPANY_ID IS NULL)
            </if>
        </where>
    </select>

    <insert id="insertNoticeBoard" parameterType="com.tiger.crm.repository.dto.board.NoticeBoardDto" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO T_BOARD (
            CATEGORY_CD,
            OPEN_YN,
            TOP_YN,
            POPUP_YN,
            POPUP_START_DT,
            POPUP_END_DT,
            TITLE,
            CONTENT,
            CREATE_ID,
            CREATE_DT,
            DELETE_YN,
            FILE_ID
        ) VALUES (
            'NOTICE',
            #{openYn},
            #{topYn},
            #{popupYn},
            #{popupStartDt},
            #{popupEndDt},
            #{title},
            #{content},
            #{createId},
            NOW(),
            'N',
            NULL
        )
    </insert>

    <update id="updateNoticeBoardFileId" parameterType="java.util.Map">
        UPDATE T_BOARD
        SET FILE_ID = #{fileId}
        WHERE BOARD_ID = #{boardId}
    </update>

    <select id="getNoticeBoardByBoardId"  resultType="com.tiger.crm.repository.dto.board.NoticeBoardDto">
        SELECT
        B.BOARD_ID,
        B.CATEGORY_CD,
        B.OPEN_YN,
        B.TOP_YN,
        B.POPUP_YN,
        B.POPUP_START_DT,
        B.POPUP_END_DT,
        B.TITLE,
        B.CONTENT,
        B.CREATE_ID,
        U.USER_NAME,
        B.CREATE_DT
        FROM T_BOARD B
        LEFT JOIN T_USER_INFO U
        ON B.CREATE_ID = U.USER_ID
        WHERE B.BOARD_ID = #{boardId}
    </select>

    <update id="deleteNoticeBoardByBoardId" parameterType="java.util.Map">
        UPDATE T_BOARD
        SET DELETE_YN = 'Y'
        WHERE BOARD_ID = #{boardId}
    </update>

    <update id="updateNoticeBoard" parameterType="com.tiger.crm.repository.dto.board.NoticeBoardDto">
        UPDATE T_BOARD
        SET
            OPEN_YN = #{openYn},
            TOP_YN = #{topYn},
            POPUP_YN = #{popupYn},
            POPUP_START_DT = #{popupStartDt},
            POPUP_END_DT = #{popupEndDt},
            TITLE = #{title},
            CONTENT = #{content},
            UPDATE_ID = #{updateId},
            UPDATE_DT = NOW()
        WHERE BOARD_ID = #{boardId}
    </update>

    <select id="getPopupNoticeBoardList"  resultType="java.util.HashMap">
        SELECT
        B.BOARD_ID,
        B.CATEGORY_CD,
        B.TOP_YN,
        B.TITLE,
        B.CREATE_ID,
        U.USER_NAME,
        B.CREATE_DT
        FROM T_BOARD B
        LEFT JOIN T_USER_INFO U
        ON B.CREATE_ID = U.USER_ID
        LEFT JOIN T_BOARD_OPEN_COMPANY O
        ON B.BOARD_ID = O.BOARD_ID
        <where>
        CATEGORY_CD = 'NOTICE'
            AND DELETE_YN = 'N'
            AND POPUP_YN = 'Y'
            <if test="userClass == 'USER' ">
                AND (O.COMPANY_ID = #{companyId} OR O.COMPANY_ID IS NULL)
            </if>
        </where>
    </select>
</mapper>