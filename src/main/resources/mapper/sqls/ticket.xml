<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tiger.crm.repository.mapper.TicketMapper">
    <select id="getTicketList" resultType="java.util.HashMap">
        SELECT TICKET_ID,
        PRIORITY_YN,
        COMPANY_NAME,
        STATUS_CD,
        REQUEST_TYPE_CD,
        SUPPORT_CD,
        IFNULL(MD, '') as MD,
        TITLE,
        U.USER_NAME,
        DATE_FORMAT(T.CREATE_DT, '%Y-%m-%d %H:%i') AS CREATE_DT,
        IFNULL(DATE_FORMAT(IFNULL(COMPLETE_DT, ''), '%Y-%m-%d %H:%i'),'') as COMPLETE_DT
        FROM T_TICKET_INFO as T
        LEFT JOIN T_USER_INFO as U on T.MANAGER_ID = U.USER_ID
        <where>
            DELETE_YN = 'N'
            <!-- userClass가 고객인 경우 -->
            <if test="userClass == 'USER'">
                AND T.COMPANY_ID = #{companyId}
            </if>
            <!-- 검색어 조건 (검색어가 존재하는 경우 제목, 내용 필드에서 LIKE 검색) -->
            <if test="searchStatus == '' and searchType == '' and (searchKeyword != null or searchKeyword != '')">
                AND (TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
                OR CONTENT LIKE CONCAT('%', #{searchKeyword}, '%'))
            </if>

            <!-- 상태 검색 조건 (상태가 존재하는 경우) -->
            <if test="searchStatus != null and searchStatus != ''">
                AND STATUS_CD = #{searchStatus}
            </if>
            <!-- 고객사명 검색  -->
            <if test="searchCompany != null and searchCompany != ''">
                AND T.COMPANY_ID = #{searchCompany}
            </if>
            <!-- 검색 유형 (searchType이 제목, 내용, 담당자, 등 선택된 경우) -->
            <if test="searchType != null and searchType != ''">
                <choose>
                    <when test="searchType == 'NUM'">
                        AND TICKET_ID LIKE CONCAT('%', #{searchKeyword}, '%')  <!-- 티켓번호로 검색 -->
                    </when>
                    <when test="searchType == 'TITLE'">
                        AND TITLE LIKE CONCAT('%', #{searchKeyword}, '%') <!-- 제목으로 검색 -->
                    </when>
                    <when test="searchType == 'TITLEANDCONTENTS'">
                        AND (TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
                        OR CONTENT LIKE CONCAT('%', #{searchKeyword}, '%')) <!-- 제목+내용으로 검색 -->
                    </when>
                    <when test="searchType == 'USERNAME'">
                        AND ASSIGNEE LIKE CONCAT('%', #{searchKeyword}, '%')  <!-- 담당자로 검색 -->
                    </when>
                </choose>
            </if>

            <!-- 시작일 필터링 -->
            <if test="startDt != '' and startDt != null and endDt != '' and endDt != null ">
                AND T.CREATE_DT BETWEEN #{startDt} AND #{endDt}
            </if>
        </where>
        order by TICKET_ID desc
        <!-- 페이지 처리 (페이징 처리) -->
        <if test="page != null">
            LIMIT #{offset}, #{size} <!-- 10개씩 보여주는 예시 (limit offset, rows) -->
        </if>
    </select>

    <select id="getTicketListCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM T_TICKET_INFO as T
        LEFT JOIN T_USER_INFO as U on T.MANAGER_ID = U.USER_ID
        <where>
            DELETE_YN = 'N'
            <!-- userClass가 고객인 경우 -->
            <if test="userClass == 'USER'">
                AND T.COMPANY_ID = #{companyId}
            </if>
            <!-- 검색어 조건 (검색어가 존재하는 경우 제목, 내용 필드에서 LIKE 검색) -->
            <if test="searchStatus == '' and searchType == '' and (searchKeyword != null or searchKeyword != '')">
                AND (TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
                OR CONTENT LIKE CONCAT('%', #{searchKeyword}, '%'))
            </if>

            <!-- 상태 검색 조건 (상태가 존재하는 경우) -->
            <if test="searchStatus != null and searchStatus != ''">
                AND STATUS_CD = #{searchStatus}
            </if>

            <!-- 검색 유형 (searchType이 제목, 내용, 담당자, 등 선택된 경우) -->
            <if test="searchType != null and searchType != ''">
                <choose>
                    <when test="searchType == 'NUM'">
                        AND TICKET_ID LIKE CONCAT('%', #{searchKeyword}, '%')  <!-- 티켓번호로 검색 -->
                    </when>
                    <when test="searchType == 'TITLE'">
                        AND TITLE LIKE CONCAT('%', #{searchKeyword}, '%') <!-- 제목으로 검색 -->
                    </when>
                    <when test="searchType == 'TITLEANDCONTENTS'">
                        AND (TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
                        OR CONTENT LIKE CONCAT('%', #{searchKeyword}, '%')) <!-- 제목+내용으로 검색 -->
                    </when>
                    <when test="searchType == 'USERNAME'">
                        AND ASSIGNEE LIKE CONCAT('%', #{searchKeyword}, '%')  <!-- 담당자로 검색 -->
                    </when>
                </choose>
            </if>
            <!-- 시작일 필터링 -->
            <if test="startDt != '' and startDt != null and endDt != '' and endDt != null ">
                AND T.CREATE_DT BETWEEN #{startDt} AND #{endDt}
            </if>
        </where>

    </select>

    <insert id="insertTicketInfo" parameterType="com.tiger.crm.repository.dto.ticket.TicketDto"  useGeneratedKeys="true" keyProperty="ticketId">
        INSERT INTO T_TICKET_INFO
        (COMPANY_ID, COMPANY_NAME, STATUS_CD, REQUEST_TYPE_CD, EXPECTED_COMPLETE_DT,
        COMPLETE_DT, PRIORITY_YN, TITLE, CONTENT, MANAGER_ID, CREATE_ID,CREATE_NAME,
        CREATE_DT, UPDATE_ID, UPDATE_DT, FILE_ID, PARENT_TICKET_CD, SUPPORT_CD, MD)
        VALUES (#{companyId}, #{companyName}, #{statusCd}, #{requestTypeCd}, #{expectedCompleteDt},
        #{completeDt}, #{priorityYn}, #{title}, #{content}, #{managerId}, #{createId}, #{createName},
        sysdate(), #{updateId}, sysdate(), #{fileId}, #{parentTicketCd}, #{supportCd}, #{md});
    </insert>

    <update id="updateTicketInfo" parameterType="com.tiger.crm.repository.dto.ticket.TicketDto"  useGeneratedKeys="true" keyProperty="ticketId">
        UPDATE T_TICKET_INFO SET
            TITLE = #{title},
            CONTENT = #{content},
            STATUS_CD = #{statusCd},
            REQUEST_TYPE_CD = #{requestTypeCd},
            SUPPORT_CD = #{supportCd},
            PRIORITY_YN = #{priorityYn},
            MANAGER_ID = #{managerId},
            EXPECTED_COMPLETE_DT = #{expectedCompleteDt},
            COMPLETE_DT = #{completeDt},
            MD = #{md},
            PARENT_TICKET_CD = #{parentTicketCd},
            UPDATE_ID = #{updateId},
            UPDATE_DT = sysdate()
        WHERE TICKET_ID = #{ticketId};
    </update>

    <select id="getManagerInfo" resultType="java.util.HashMap">
        SELECT U.USER_ID as MANAGER_ID,
        U.USER_NAME as MANAGER_NAME
        FROM T_USER_INFO as U
        LEFT JOIN T_COMPANY_INFO as C
        on C.MANAGER_ID = U.USER_ID
        WHERE C.COMPANY_ID = #{companyId}
    </select>

    <!-- 티켓 상세 정보 조회 -->
    <select id="selectTicketDetails" parameterType="int" resultType="com.tiger.crm.repository.dto.ticket.TicketDto">
        SELECT TICKET_ID,
        CREATE_NAME,
        PRIORITY_YN,
        COMPANY_NAME,
        T.COMPANY_ID as COMPANY_ID,
        STATUS_CD,
        REQUEST_TYPE_CD,
        SUPPORT_CD,
        IFNULL(MD, '') as MD,
        TITLE,
        CONTENT,
        T.MANAGER_ID as MANAGER_ID,
        U.USER_NAME as MANAGER_NAME,
        DATE_FORMAT(T.CREATE_DT, '%Y-%m-%d') as CREATE_DT,
        DATE_FORMAT(T.EXPECTED_COMPLETE_DT, '%Y-%m-%d') as EXPECTED_COMPLETE_DT,
        IFNULL(DATE_FORMAT(IFNULL(COMPLETE_DT, ''), '%Y-%m-%d'),'') as COMPLETE_DT
        FROM T_TICKET_INFO as T
        LEFT JOIN T_USER_INFO as U on T.MANAGER_ID = U.USER_ID
        WHERE TICKET_ID = #{ticketId} and  DELETE_YN = 'N'
    </select>

    <update id="updateTicketStatus" parameterType="map">
        UPDATE T_TICKET_INFO
        SET STATUS_CD = #{newStatus},
        <!-- userClass가 고객아닐경우 -->
        <if test="updateId != ''">
            MANAGER_ID = #{updateId},
        </if>
        UPDATE_DT = NOW(),
        UPDATE_ID = #{updateId}
        <if test="newStatus == 'CLOSED'"> <!--완료일경우 완료일 update-->
            , COMPLETE_DT = NOW()
        </if>
        WHERE TICKET_ID = #{ticketId}
    </update>

    <update id="updateTicketFileId" parameterType="map">
        UPDATE T_TICKET_INFO
        SET FILE_ID = #{fileId}
        WHERE TICKET_ID = #{ticketId}
    </update>

    <insert id="insertTicketComment" parameterType="map">
        INSERT INTO T_TICKET_ANSWER
        (TICKET_ID, STATUS_CD, CONTENT, CREATE_ID, CREATE_DT, UPDATE_DT, FILE_ID, DELETE_YN)
        VALUES(#{ticketId}, #{statusCd}, #{comment}, #{createId}, sysdate(), sysdate(), NULL, 'N');
    </insert>

    <!-- 티켓 댓글 정보 조회 -->
    <select id="getCommentsByTicketId" resultType="com.tiger.crm.repository.dto.ticket.CommentDto">
        SELECT ANSWER_ID, TICKET_ID, STATUS_CD, CONTENT, T.CREATE_ID, U.USER_NAME as CREATE_NAME , DATE_FORMAT(T.CREATE_DT, '%y/%m/%d %H:%i') as CREATE_DT , FILE_ID, USER_CLASS
        FROM T_TICKET_ANSWER as T
        LEFT JOIN T_USER_INFO as U
        on T.CREATE_ID = U.USER_ID
        where TICKET_ID = #{ticketId} and DELETE_YN = 'N'
    </select>

    <!--전체 담당자 조회-->
    <select id="getAllManager" resultType="com.tiger.crm.repository.dto.ticket.TicketDto">
        SELECT USER_ID as MANAGER_ID,
        USER_NAME as MANAGER_NAME
        FROM T_USER_INFO as U
        WHERE (USER_CLASS = 'ADMIN' OR USER_CLASS ='SYSADMIN') AND USE_YN = 'Y' order by USER_NAME
    </select>

    <update id="deleteTicket" parameterType="map">
        UPDATE T_TICKET_INFO
        SET DELETE_YN = 'Y'
        WHERE TICKET_ID = #{ticketId};
    </update>

    <update id="deleteTicketAnswer" parameterType="map">
        UPDATE T_TICKET_ANSWER
        SET DELETE_YN = 'Y'
        WHERE TICKET_ID = #{ticketId};
    </update>

    <update id="deleteTicketAnswerById" parameterType="map">
        UPDATE T_TICKET_ANSWER
        SET DELETE_YN = 'Y'
        WHERE ANSWER_ID = #{Id};
    </update>

</mapper>
